0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Users\\humy2833\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@3.5.3
3 info using node@v4.3.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'd:\\nodeclipse\\workspace\\easy-ftp',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\humy2833\AppData\Roaming\npm-cache\easy-ftp\0.3.6\package.tgz not in flight; packing
9 info lifecycle easy-ftp@0.3.6~prepublish: easy-ftp@0.3.6
10 silly lifecycle easy-ftp@0.3.6~prepublish: no script for prepublish, continuing
11 verbose tar pack [ 'C:\\Users\\humy2833\\AppData\\Roaming\\npm-cache\\easy-ftp\\0.3.6\\package.tgz',
11 verbose tar pack   'd:\\nodeclipse\\workspace\\easy-ftp' ]
12 verbose tarball C:\Users\humy2833\AppData\Roaming\npm-cache\easy-ftp\0.3.6\package.tgz
13 verbose folder d:\nodeclipse\workspace\easy-ftp
14 verbose addLocalTarball adding from inside cache C:\Users\humy2833\AppData\Roaming\npm-cache\easy-ftp\0.3.6\package.tgz
15 silly cache afterAdd easy-ftp@0.3.6
16 verbose afterAdd C:\Users\humy2833\AppData\Roaming\npm-cache\easy-ftp\0.3.6\package\package.json not in flight; writing
17 verbose afterAdd C:\Users\humy2833\AppData\Roaming\npm-cache\easy-ftp\0.3.6\package\package.json written
18 silly publish { name: 'easy-ftp',
18 silly publish   version: '0.3.6',
18 silly publish   description: 'easy ftp and sftp',
18 silly publish   main: 'lib/easy-ftp',
18 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
18 silly publish   keywords: [ 'ftp', 'sftp', 'ssh', 'upload', 'remote', 'download' ],
18 silly publish   dependencies:
18 silly publish    { ftp: '*',
18 silly publish      ssh2: '*',
18 silly publish      xtend: '*',
18 silly publish      'fs-extra': '*',
18 silly publish      'easy-loop': '*' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/humy2833/easy-ftp.git' },
18 silly publish   bugs: { url: 'https://github.com/humy2833/easy-ftp/issues' },
18 silly publish   author: { name: 'humy2833', email: 'humy2833@gmail.com' },
18 silly publish   license: 'MIT',
18 silly publish   readme: 'easy-ftp\r\n===========\r\n- Easy control FTP or SFTP\r\n- 간단한 설정만으로 편리하게 FTP 혹은 SFTP 의 기능을 이용할 수 있습니다.\r\n- 이 모듈은 [ftp](https://www.npmjs.com/package/ftp) 와 [ssh2](https://www.npmjs.com/package/ssh2) 모듈을 참조하였습니다.\r\n\r\n\r\n\r\nInstall\r\n=======\r\n\r\n    npm install easy-ftp\r\n\r\n\r\n\r\n\r\nUsage\r\n===========\r\n```javascript\r\nvar EasyFtp = require(\'easy-ftp\');\r\nvar ftp = new EasyFTP();\r\nvar config = {\r\n    host: \'\',\r\n    port: 21,\r\n    username: \'\',\r\n    password: \'\'\r\n};\r\n\r\n//서버 접속(connect)\r\nftp.connect(config);\t\t\r\n\r\n//폴더 변경(directory change)\r\nftp.cd("/", function(err, path){});\t\r\n\r\n//파일 or 폴더 삭제(하위 파일 및 폴더 포함)(file or directory remove(recursive))\r\nftp.rm("/filename", function(err){});\t\r\n\r\n//폴더 생성(하위 폴더 포함 생성)(make directory)\r\nftp.mkdir("/directory", function(err){});\t\r\n\r\n//파일 or 폴더 이동 혹은 이름 변경(file or directory move or change filename)\r\nftp.mv("/filename", "/newFilename", function(err, newPath){});\t\r\n\r\n//폴더 내 파일목록 반환(show files in directory)\r\nftp.ls("/directory", function(err, list){});\t\r\n\r\n//ftp 서버상의 현재 작업 경로 반환(return server path)\r\nftp.pwd(function(err, path){});\t\r\n\r\n\r\n//파일 or 폴더 업로드(file or directory upload)\r\nftp.upload("/test.txt", "/test.txt", function(err){});  \t//result => /test.txt\r\nftp.upload("/test.txt", "/test123.txt", function(err){});  //result => /test123.txt \r\nftp.upload("/test.txt", "/", function(err){});\t\t\t//result => /test.txt\r\nftp.upload("/directory", "/", function(err){});\t\t\t//result => /directory\r\n\r\n//Array - Object({local:\'localPath\', remote:\'remotePath\'})\r\nvar arr = [{local:"/test.txt", remote:"/test.txt"}, {local:"/test1.txt", remote:"/abcd/test2.txt"}, {local:"/directory", remote:"/"}];\r\nftp.upload(arr, function(err){});\t// 2 arguments;\r\n/* result\r\n/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n//Array - String\r\nvar arr = ["/test.txt", "/abcd/test2.txt", "/directory"];\r\nftp.upload(arr, "/", function(err){});\t// 3 arguments;\r\n/* result\r\n/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n//Array - Object and String\r\nvar arr = [{local:"/test.txt", remote:"/directory/test.txt"}, "/abcd/test2.txt", "/directory"];\r\nftp.upload(arr, "/", function(err){});\t// 3 arguments;\r\n/* result\r\n/directory/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n\r\n//파일 or 폴더 다운로드(file or directory download)\r\nftp.download("/test.txt", "/test.txt", function(err){});\t//result => /test.txt\r\nftp.download("/test.txt", "/test123.txt", function(err){});\t//result => /test123.txt \r\nftp.download("/test.txt", "/", function(err){});\t\t//result => /test.txt \r\nftp.download("/directory", "/", function(err){});\t\t//result => /directory \r\n\r\n//Array - Object({local:\'localPath\', remote:\'remotePath\'})\r\nvar arr = [{remote:"/test.txt", local:"/test.txt"}, {remote:"/test1.txt", local:"/abcd/test2.txt"}, {remote:"/directory", local:"/"}];\r\nftp.download(arr, function(err){});\t// 2 arguments;\r\n/* result\r\n/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n//Array - String\r\nvar arr = ["/test.txt", "/abcd/test2.txt", "/directory"];\r\nftp.download(arr, "/", function(err){});\t// 3 arguments;\r\n/* result\r\n/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n//Array - Object and String\r\nvar arr = [{remote:"/test.txt", local:"/directory/test.txt"}, "/abcd/test2.txt", "/directory"];\r\nftp.download(arr, "/", function(err){});\t// 3 arguments;\r\n/* result\r\n/directory/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n\r\n\r\n//접속 종료(disconnect)\r\nftp.close();\t\r\n```\r\n\r\n\r\n\r\nAPI\r\n===========\r\nMethods\r\n-------\r\n* **connect**(< _object_ >config) \r\n\r\n    * host - _string_\t- server domain or ip **Default:** \'localhost\'\r\n    * port - _number_\t- port (default : 21)\r\n    * type - _string_\t- ftp type. \'ftp\' or \'sftp\' (default : \'ftp\')\r\n    * username - _string_ - username for authentication **Default:** \'anonymous\',\r\n    * password - _string_\t- password for authentication. **Default:** \'anonymous@\'\r\n    * privateKey - _mixed_\t- sftp only. Buffer or string that contains a private key for either key-based or hostbased user authentication (OpenSSH format) **Default:** none\r\n\r\n\r\n* **cd**(< _string_ >path, < _function_ >callback) - Changes the working directory. callback has 1 parameter: < Error >err.\r\n\r\n* **rm**(< _string_ >path, < _function_ >callback) - Deletes a file or directory(include child files) path on the server. callback has 1 parameter: < Error >err.\r\n    \r\n* **mkdir**(< _string_ >path, < _function_ >callback) - Creates a new directory recursive. callback has 1 parameter: < Error >err.\r\n\r\n* **mv**(< _string_ >oldPath, < _string_ >newPath, < _function_ >callback) - Renames or Move oldPath to newPath on the server. callback has 2 parameter: < Error >err, < String >newPath.\r\n\r\n* **ls**(< _string_ >path, < _function_ >callback) - Retrieves the directory listing of path. callback has 2 parameter: < Error >err, < Array >list.\r\n    \r\n    * name - _string_ - file name\r\n    * size - _number_ - file size\r\n    * type - _string_ - file type. \'d\' => directory,  \'f\' => file\r\n    * date - _date_ - file last modified date\r\n\r\n\r\n* **pwd**(< _function_ >callback) - Retrieves the current working directory. callback has 2 parameters: < Error >err, < string >cwd.\r\n\r\n* **upload**(< _mixed_ >localPath, < _string_ >remotePath, < _function_ >callback) - Sends data to the server to be stored as remotePath. If direcotry path, include self directory and child files. If you want only child files, localPath is "/directory/**". callback has 1 parameter: < Error >err. \r\n    \r\n    * file\t\t- ex) upload("/test.txt", "/a/b/test.txt", ...)\t=>  result : /a/b/test.txt\r\n    * directory\t\t- ex) upload("/directory", "/a/b", ...)\t\t=>  result : /a/b/directory\r\n    * only child files\t- ex) upload("/directory/**", "/a/b", ...)\t=>  result : /a/b/child files...\r\n    * array\t- ex) upload(["/directory/**", "/test.txt"], "/a/b", ...)\t=>  result : "/a/b/test.txt" and "/a/b/child files..."\r\n\r\n\r\n* **download**(< _mixed_ >remotePath, < _string_ >localPath, < _function_ >callback) - Retrieves a file or directory at path from the server. If directory path, include child files. callback has 1 parameter: < Error >err. \r\n\r\n\t* file\t\t- ex) download("/test.txt", "/a/b/test.txt", ...)\t=>  result : /a/b/test.txt\r\n    * directory\t\t- ex) download("/directory", "/a/b", ...)\t\t=>  result : /a/b/directory\r\n    * only child files\t- ex) download("/directory/**", "/a/b", ...)\t=>  result : /a/b/child files...\r\n    * array\t- ex) download(["/directory/**", "/test.txt"], "/a/b", ...)\t=>  result : "/a/b/test.txt" and "/a/b/child files..."\r\n    \r\n\r\n* **close**() - Closes the connection to the server after any/all enqueued commands have been executed.\r\n\r\n\r\n\r\n\r\nEvent\r\n-------\r\n* **open**(< _FTPClient_ >client) - Emitted when connection and authentication were sucessful.\r\n\r\n* **close** - Emitted when the connection has fully closed.\r\n\r\n* **error**(< _Error_ >err) - Emitted when the connection has fully closed.\r\n\r\n* **upload**(< _string_ >uploadedRemotePath) - Emitted when file or directory uploaded.\r\n\r\n* **download**(< _string_ >downloadedLocalPath) - Emitted when file or directory downloaded.\r\n\r\n\r\n\r\nExamples\r\n===========\r\n```javascript\r\n//Connect\r\nvar ftp = new EasyFTP();\r\nvar config = {\r\n    host: \'localhost\',\r\n    port: 21,\r\n    username: \'id\',\r\n    password: \'password\'\r\n};\r\nftp.connect(config);\r\n\r\n\r\n\r\n\r\n/* \r\nEx) Directory structure\r\n/test/test.txt\r\n/test/child1\r\n/test/child1/image.png\r\n/test/child1/child2\r\n/test/child1/child2/shell.sh\r\n*/\r\n\r\n//Case1. files Upload\r\nvar ftp = new EasyFTP();\r\nftp.connect({...});\r\n//"/test/test.txt", "/test.txt"   or   "/test/test.txt", "/"\r\nftp.upload("/test/test.txt", "/test.txt", function(err){\r\n\tftp.close();\r\n});\r\n/* result\r\n/test.txt\r\n*/\r\n\r\n\r\n\r\n//Case2. child files Upload\r\nvar ftp = new EasyFTP();\r\nftp.connect({...});\r\n// \'/test/**\' or \'/test/*\'\r\nftp.upload("/test/**", "/", function(err){\r\n\tftp.close();\r\n});\r\n/* result\r\n/test.txt\r\n/child1\r\n/child1/image.png\r\n/child1/child2\r\n/child1/child2/shell.sh\r\n*/\r\n\r\n\r\n\r\n//Case3. directory Upload\r\nvar ftp = new EasyFTP();\r\nftp.connect({...});\r\nftp.upload("/test", "/", function(err){\r\n\tftp.close();\t\r\n});\r\n/* result\r\n/test/test.txt\r\n/test/child1\r\n/test/child1/image.png\r\n/test/child1/child2\r\n/test/child1/child2/shell.sh\r\n*/\r\n\r\n//Case4. Multi file Upload\r\n//Array - Object({local:\'localPath\', remote:\'remotePath\'})\r\nvar arr = [{local:"/test.txt", remote:"/test.txt"}, {local:"/test1.txt", remote:"/abcd/test2.txt"}, {local:"/directory", remote:"/"}];\r\nftp.upload(arr, function(err){ftp.close();});\t// 2 arguments;\r\n/* result\r\n/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n//Array - String\r\nvar arr = ["/test.txt", "/abcd/test2.txt", "/directory"];\r\nftp.upload(arr, "/", function(err){ftp.close();});\t// 3 arguments;\r\n/* result\r\n/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n//Array - Object and String\r\nvar arr = [{local:"/test.txt", remote:"/directory/test.txt"}, "/abcd/test2.txt", "/directory"];\r\nftp.upload(arr, "/", function(err){ftp.close();});\t// 3 arguments;\r\n/* result\r\n/directory/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n\r\n\r\n//Case5. file download\r\nvar ftp = new EasyFTP();\r\nftp.connect({...});\r\n//"/test/test.txt", "/test.txt"   or   "/test/test.txt", "/"\r\nftp.download("/test/test.txt", "/test.txt", function(err){\r\n\tftp.close();\t\r\n});\r\n/* result\r\n/test.txt\r\n*/\r\n\r\n\r\n\r\n//Case6. direcotry download\r\nvar ftp = new EasyFTP();\r\nftp.connect({...});\r\nftp.download("/test", "/", function(err){\r\n\tftp.close();\t\r\n});\r\n/* result\r\n/test/test.txt\r\n/test/child1\r\n/test/child1/image.png\r\n/test/child1/child2\r\n/test/child1/child2/shell.sh\r\n*/\r\n\r\n\r\n\r\n//Case7. Multi file download\r\n//Array - Object({local:\'localPath\', remote:\'remotePath\'})\r\nvar arr = [{remote:"/test.txt", local:"/test.txt"}, {remote:"/test1.txt", local:"/abcd/test2.txt"}, {remote:"/directory", local:"/"}];\r\nftp.download(arr, function(err){ftp.close();});\t// 2 arguments;\r\n/* result\r\n/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n//Array - String\r\nvar arr = ["/test.txt", "/abcd/test2.txt", "/directory"];\r\nftp.download(arr, "/", function(err){ftp.close();});\t// 3 arguments;\r\n/* result\r\n/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n\r\n//Array - Object and String\r\nvar arr = [{remote:"/test.txt", local:"/directory/test.txt"}, "/abcd/test2.txt", "/directory"];\r\nftp.download(arr, "/", function(err){ftp.close();});\t// 3 arguments;\r\n/* result\r\n/directory/test.txt\r\n/abcd/test2.txt\r\n/directory\r\n*/\r\n```\r\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '459f71bae87b81275fe33957e6e173ad5cbab2bc',
18 silly publish   homepage: 'https://github.com/humy2833/easy-ftp#readme',
18 silly publish   _id: 'easy-ftp@0.3.6',
18 silly publish   _shasum: '0baea206583fc2c9bdee25457e30f10fab188e1e',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name easy-ftp
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/easy-ftp
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading C:\Users\humy2833\AppData\Roaming\npm-cache\easy-ftp\0.3.6\package.tgz
26 verbose request uri https://registry.npmjs.org/easy-ftp
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 16:41:06
29 verbose request using bearer token for auth
30 verbose request id 4d4c708d679b907e
31 http request PUT https://registry.npmjs.org/easy-ftp
32 http 403 https://registry.npmjs.org/easy-ftp
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Tue, 26 Jul 2016 07:41:09 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-hkg6823-HKG',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1469518868.369958,VS0,VE1030',
33 verbose headers   vary: 'Accept-Encoding' }
34 verbose request invalidating C:\Users\humy2833\AppData\Roaming\npm-cache\registry.npmjs.org\easy-ftp on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 0.3.6." : easy-ftp
36 verbose stack     at makeError (C:\Users\humy2833\AppData\Roaming\npm\node_modules\npm\node_modules\npm-registry-client\lib\request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (C:\Users\humy2833\AppData\Roaming\npm\node_modules\npm\node_modules\npm-registry-client\lib\request.js:252:14)
36 verbose stack     at Request._callback (C:\Users\humy2833\AppData\Roaming\npm\node_modules\npm\node_modules\npm-registry-client\lib\request.js:172:14)
36 verbose stack     at Request.self.callback (C:\Users\humy2833\AppData\Roaming\npm\node_modules\npm\node_modules\request\request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (C:\Users\humy2833\AppData\Roaming\npm\node_modules\npm\node_modules\request\request.js:1035:10)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (C:\Users\humy2833\AppData\Roaming\npm\node_modules\npm\node_modules\request\request.js:962:12)
37 verbose statusCode 403
38 verbose pkgid easy-ftp
39 verbose cwd d:\nodeclipse\workspace\easy-ftp
40 error Windows_NT 6.1.7601
41 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Users\\humy2833\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js" "publish"
42 error node v4.3.0
43 error npm  v3.5.3
44 error code E403
45 error "You cannot publish over the previously published version 0.3.6." : easy-ftp
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
